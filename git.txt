---------在Linux上安装Git
// 查看系统是否安装Git
git

//安装Git
sudo apt-get install git

-----------Windows使用Git
//设置用户-邮箱
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

//初始化git仓库
$ git init

//添加文件到仓库	Unix的哲学是“没有消息就是好消息”
$ git add readme.txt		//单个文件
$ git add .					//全部文件

//提交到仓库
$ git commit -m "这是提交说明"

//查看仓库当前情况
$ git status

//查看日志
$ git log
$ git log --pretty=oneline

//回退上一个版本 上⼀个版本就是HEAD^，上上⼀个版本就是HEAD^^，当然往上100 个版本写100个^⽐较容易数不过来，所以写成HEAD~100。
$ git reset --hard HEAD^
$ git reset --hard 3628164[commit id]

//删除文件
$ git rm test.txt
$ git commit -m "remove test.txt"

---------远程仓库
1: 由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要设置：
$ ssh-keygen -t rsa -C "youremail@example.com"

2: 登陆GitHub，打开“Account settings”，“SSH Keys”页面保存 , 有id_rsa私钥和id_rsa.pub公钥

3: 本地添加远程地址
$ git remote add origin https://github.com/zxc881166/H-admin-thinkphp3.2-rbac.git

4: 推送到远程 [第一次加-u,关联并推送 ,以后不用]
$ git push -u origin master


//克隆到本地
$ git clone git@github.com:michaelliao/gitskills.git

//查看远程库信息
$ git remote
$ git remote -v
	
//推送分支
$ git push origin dev


--------------创建分支
//创建并切换分支
$ git checkout -b dev[分支名字]
//或
$ git branch dev[分支名字]         //创建
$ git checkout dev[分支名字]       //切换

//查看分支
$ git branch

//合并分支
$ git merge dev

//删除分支
$ git branch -d dev








//当Git无法自动合并分支时，就必须先解决冲突。解决冲突后，再提交，合并完成。
1: git pull  
//git pull也失败了，原因是没有指定本地分支与远程origin/dev分支的链接，根据提示设置dev和origin/dev的链接：
2: git branch --set-upstream-to=origin/master master
3: git pull
//重新添加 - 提交
4: git add README.md
5: git commit -m 'merge & fix README.md'
6: git push origin master